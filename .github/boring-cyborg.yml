##### Labeler ##########################################################################################################
# Enable "labeler" for your PR that would add labels to PRs based on the paths that are modified in the PR.
labelPRBasedOnFilePath:
  origin(en-US):
    - project/en-US/**/*
  translate(ko-KR):
    - project/ko-KR/**/*
  translate(fr-FR):
    - project/fr-FR/**/*
  translate(zh-HANS):
    - project/zh-HANS/**/*
  translate(zh-HANT):
    - project/zh-HANT/**/*
  translate(es-ES):
    - project/es-ES/**/*

# Various Flags to control behaviour of the "Labeler"
labelerFlags:
  # If this flag is changed to 'false', labels would only be added when the PR is first created and not when existing
  # PR is updated.
  # The default is 'true' which means the labels would be added when PR is updated even if they were removed by the user
  labelOnPRUpdates: true

###### Title Validator #################################################################################################
# Verifies if commit/PR titles match the regexp specified
verifyTitles:
  # Regular expression that should be matched by titles of commits or PR
  titleRegexp: '^(origin|translate|maintain)\((.+)\): (.+)$'
  # If set to true, it will always check the PR title (as opposed to the individual commits).
  alwaysUsePrTitle: true
  # If set to true, it will only check the commit in case there is a single commit.
  # In case of multiple commits it will check PR title.
  # This reflects the standard behaviour of Github that for `Squash & Merge` GitHub
  # uses the PR title rather than commit messages for the squashed commit ¯\_(ツ)_/¯
  # For single-commit PRs it takes the squashed commit message from the commit as expected.
  #
  # If set to false it will check all commit messages. This is useful when you do not squash commits at merge.
  validateEitherPrOrSingleCommitTitle: true
  # The title the GitHub status should appear from.
  statusTitle: "Title Validator"
  # A custom message to be displayed when the title passes validation.
  successMessage: "Validation successful!"
  # A custom message to be displayed when the title fails validation.
  # Allows insertion of ${type} (commit/PR), ${title} (the title validated) and ${regex} (the titleRegexp above).
  failureMessage: "Wrong ${type} title: ${title}"

###### PR/Branch Up-To-Date Checker ####################################################################################
# Check if the branch is up to date with master when certain files are modified
checkUpToDate:
  # The default branch is "master", change the branch if you want to check against a different target branch
  targetBranch: main
  files:
    # File paths that you want to check for
    # In this example, it checks if the branch is up to date when alembic migrations are modified in the PR.
    # It helps avoid multiple heads in alembic migrations in a collaborative development project.
    - project/**/*
